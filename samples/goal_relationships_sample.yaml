goalrelationships: 
    add_supporting_relationship: >-
        require 'asana'


        client = Asana::Client.new do |c|
            c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
        end


        result = client.goal_relationships.add_supporting_relationship(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    get_goal_relationship: >-
        require 'asana'


        client = Asana::Client.new do |c|
            c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
        end


        result = client.goal_relationships.get_goal_relationship(goal_relationship_gid: 'goal_relationship_gid', param: "value", param: "value", options: {pretty: true})
    get_goal_relationships: >-
        require 'asana'


        client = Asana::Client.new do |c|
            c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
        end


        result = client.goal_relationships.get_goal_relationships(supported_goal: '&#x27;supported_goal_example&#x27;', param: "value", param: "value", options: {pretty: true})
    remove_supporting_relationship: >-
        require 'asana'


        client = Asana::Client.new do |c|
            c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
        end


        result = client.goal_relationships.remove_supporting_relationship(goal_gid: 'goal_gid', field: "value", field: "value", options: {pretty: true})
    update_goal_relationship: >-
        require 'asana'


        client = Asana::Client.new do |c|
            c.authentication :access_token, 'PERSONAL_ACCESS_TOKEN'
        end


        result = client.goal_relationships.update_goal_relationship(goal_relationship_gid: 'goal_relationship_gid', field: "value", field: "value", options: {pretty: true})
