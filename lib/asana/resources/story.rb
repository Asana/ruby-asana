### WARNING: This file is auto-generated by the asana-api-meta repo. Do not
### edit it manually.

module Asana
  module Resources
    # A _story_ represents an activity associated with an object in the Asana
    # system. Stories are generated by the system whenever users take actions such
    # as creating or assigning tasks, or moving tasks between projects. _Comments_
    # are also a form of user-generated story.
    #
    # Stories are a form of history in the system, and as such they are read-only.
    # Once generated, it is not possible to modify a story.
    class Story < Resource


      attr_reader :id

      class << self
        # Returns the plural name of the resource.
        def plural_name
          'stories'
        end

        # Returns the full record for a single story.
        #
        # id - [Id] Globally unique identifier for the team.
        def find_by_id(client, id)

          self.new(body(client.get("/stories/#{id}")), client: client)
        end

        # Returns the compact records for all stories on the task.
        #
        # task - [Id] Globally unique identifier for the task.
        def find_by_task(client, task:)

          Collection.new(body(client.get("/tasks/#{task}/stories")).map { |data| self.new(data, client: client) }, client: client)
        end

        # Adds a comment to a task. The comment will be authored by the
        # currently authenticated user, and timestamped when the server receives
        # the request.
        #
        # Returns the full record for the new story added to the task.
        #
        # task - [Id] Globally unique identifier for the task.
        #
        # text - [String] The plain text of the comment to add.
        # data - [Hash] the attributes to post.
        def create_on_task(client, task:, text:, **data)
          with_params = data.merge(text: text).reject { |_,v| v.nil? }
          self.new(body(client.post("/tasks/#{task}/stories", body: with_params)), client: client)
        end
      end

    end
  end
end
